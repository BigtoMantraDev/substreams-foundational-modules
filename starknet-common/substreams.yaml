specVersion: v0.1.0
package:
  name: starknet_foundational
  version: v0.1.3

protobuf:
  files:
    - starknet.proto
  importPaths:
    - ./proto/sf/substreams/starknet/type/v1

imports:
  starknet: /Users/cbillett/devel/sf/substreams-starknet/starknet-v0.1.2.spkg

binaries:
  default:
    type: wasip1/tinygo-v1  # wasm/rust-v1
    file: ./wasm.wasm

network: starknet

modules:
  - name: all_transactions
    kind: map
    initialBlock: 0
    inputs:
      - source: sf.starknet.type.v1.Block
    output:
      type: proto:sf.substreams.starknet.type.v1.Transactions
    doc: |
      `all_transaction` reads from the `sf.starknet.type.v1.Block` source and outputs a list of all transactions in the block.

  - name: index_transactions
    kind: blockIndex
    inputs:
      - map: all_transactions
    output:
      type: proto:sf.substreams.index.v1.Keys
    doc: |
      `index_events` sets the keys corresponding to all event 'types' and 'attribute keys' in the block

  - name: filtered_transactions
    kind: map
    blockFilter:
      module: index_transactions
      query:
        params: true
    inputs:
      - params: string
      - map: all_transactions
    output:
      type: proto:sf.substreams.starknet.type.v1.Transactions
    doc: |
      `filtered_transactions` reads from `all_transactions` and applies a filter on keys, 
      only outputting the transactions that match the filter. 
      Example usage: `(tx:class_hash:0x0000000 && rc:type:0)`

params:
  filtered_transactions: "(rc:execution_status:1)"
