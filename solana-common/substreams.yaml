specVersion: v0.1.0
package:
  name: "solana_common"
  version: v0.2.0
  image: ./solana.png
  doc: |
    Common Solana modules that allow you to consume transactions and instructions, and apply filters to efficiently retrieve the data that you need.
    To consume data, use the following optimized modules:
    - `filtered_instructions_without_votes`: allows you to specify which specific instruction types you need (based on the program ID).
    - `filtered_txs_by_instructions_without_votes`: allows you consume transactions containing specific instruction types (based on the program ID).
network: solana

imports:
  solana: https://github.com/streamingfast/firehose-solana/releases/download/v0.1.1/solana-v0.1.1.spkg

protobuf:
  files:
    - instructions.proto
    - transactions.proto
  importPaths:
    - ./proto

binaries:
  default:
    type: wasm/rust-v1
    file: ./target/wasm32-unknown-unknown/release/substreams.wasm

modules:
  - name: map_block_without_votes
    kind: map
    inputs:
      - source: sf.solana.type.v1.Block
    output:
      type: proto:sf.solana.type.v1.Block
    doc: |
      `map_block_without_votes` allows you to consume a full Solana Block without Vote instructions (`Vote111111111111111111111111111111111111111`). 
      If you consume it on HISTORICAL data (+1000 block from HEAD), you will be reading the StreamingFast cache, thus savings costs on the amount of TB read.

  - name: all_transactions_without_votes
    kind: map
    inputs:
      - map: map_block_without_votes
    output:
      type: proto:sol.transactions.v1.Transactions
    doc: |
      `all_transactions_without_votes` provides you with all the transactions in a block, excluding the Vote transaction (transactions containing `Vote111111111111111111111111111111111111111` instructions).

  - name: all_instructions_without_votes
    kind: map
    inputs:
      - map: all_transactions_without_votes
    output:
      type: proto:sol.instructions.v1.Instructions
    doc: |
      `all_instructions_without_votes` provides you with all the instructions in a block, excluding the Vote (`Vote111111111111111111111111111111111111111`) instructions.

  - name: index_instructions_without_votes
    kind: blockIndex
    inputs:
      - map: all_instructions_without_votes
    output:
      type: proto:sf.substreams.index.v1.Keys
    doc: |
      `index_instructions_without_votes` creates a _cache_ to efficiently retrieve instructions based on the program ID.
      For example, the following sets keys for the Token program:
      * program:TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA

  - name: filtered_instructions_without_votes
    kind: map
    blockFilter:
      module: index_instructions_without_votes
      query:
        params: true
    inputs:
      - params: string
      - map: all_instructions_without_votes
    output:
      type: proto:sol.instructions.v1.Instructions
    doc: |
      `filtered_instructions_without_votes` reads from the `all_instructions_without_votes` module and applies a filter to only keep the program ID instructions that you want.
      Supported operators are: logical or `||`, logical and `&&` and parenthesis: `()`.
      Example to only consume Token or ComputeBudget instructions: `program:TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA || program:ComputeBudget111111111111111111111111111111`.

  - name: filtered_txs_by_instructions_without_votes
    kind: map
    blockFilter:
      module: index_instructions_without_votes
      query:
        params: true
    inputs:
      - params: string
      - map: all_transactions_without_votes
    output:
      type: proto:sol.transactions.v1.Transactions
    doc: |
      `filtered_txs_by_instructions_without_votes` allows you to consume transactions containing specficic instructions.
      It behaves similar to the `filtered_instructions_without_votes` module, but it provides you with the full transaction data, not only the instruction data.
      Supported operators are: logical or `||`, logical and `&&` and parenthesis: `()`.
      Example to only consume TRANSACTIONS containing Token or ComputeBudget instructions: `program:TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA || program:ComputeBudget111111111111111111111111111111`.

params: # Default parameters for the filter modules. You can override these parameters based on your needs.
  filtered_instructions_without_votes: "program:TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
  filtered_txs_by_instructions_without_votes: "program:TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
